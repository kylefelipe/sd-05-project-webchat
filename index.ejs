<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Web CHATeador</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js"></script>
  </head>
  <body>
    <ul id="messages">
      <% messages.forEach(({date, nickname, chatMessage}) => { %>
      <li data-testid="message">
        <%=date %> - <%=nickname %>: <%=chatMessage%>
      </li>
      <%}) %>
    </ul>
    <form action="">
      <div class="nickName container">
        <input id="nickInput" autocomplete="on" data-testid="nickname-box" />
        <button id="change-nick" data-testid="nickname-save">Apelido</button>
      </div>
      <div class="input-message container">
        <input
          data-testid="message-box"
          id="mensagemInput"
          autocomplete="off"
        />
        <button id="send-message" data-testid="send-button">Send</button>
      </div>
      <div class="logged-users container" id="logged-users">
        <% onlineUsers.forEach(({userId, nickname}) => { %>
        <li data-testid="online-user" id="<%=userId%>"><%=nickname%></li>
        <%}) %>
      </div>
    </form>
    <script>
      const socket = io();
      const form = document.querySelector('form');
      const inputMessage = document.querySelector('#mensagemInput');
      const loggedUsers = document.querySelector('#logged-users');
      const sendMessage = document.querySelector('#send-message');
      const changeNick = document.querySelector('#change-nick');
      const messagesUl = document.querySelector('#messages');
      const nickInput = document.querySelector('#nickInput');
      let nickname;
      let userId;

      const createMessage = (message) => {
        const li = document.createElement('li');
        li.innerText = message;
        li.setAttribute('data-testid', 'message');
        messagesUl.appendChild(li);
      };
      const showUsers = (id, nick) => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.setAttribute('id', id);
        li.innerText = nick;
        loggedUsers.appendChild(li);
      };
      sendMessage.addEventListener('click', (e) => {
        e.preventDefault();
        const chatMessage = document.querySelector('#mensagemInput').value;
        if (chatMessage != '') {
          socket.emit('message', { nickname, chatMessage });
          inputMessage.value = '';
        }
      });
      changeNick.addEventListener('click', (e) => {
        e.preventDefault();
        nickname = nickInput.value;
        if (nickname != '') {
          socket.emit('nickChange', nickname, userId);
          nickInput.placeholder = nickname;
          nickInput.value = '';
        }
      });
      socket.on('connected', (id, nick) => {
        userId = id;
        nickname = nick;
        nickInput.placeholder = nick;
      });
      socket.on('userConnected', (id, nick) => showUsers(id, nick));
      socket.on('message', (msg) => {
        createMessage(msg);
      });
      socket.on('nickChange', (nick, id) => {
        const ulNick = document.getElementById(id);
        ulNick.innerText = nick;
      });
      socket.on('userQuit', (id) => {
        document.getElementById(id).remove();
      });
    </script>
  </body>
</html>
